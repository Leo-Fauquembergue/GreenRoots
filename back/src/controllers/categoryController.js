import { Category, CatalogTree } from "../models/associations.js";
import { idSchema, categorySchema } from "../schemas/index.js";
import { HttpError } from "../errors/http-error.js";

// üîé GET /categories - R√©cup√©rer toutes les cat√©gories
export async function getAllCategories(req, res) {
  const categories = await Category.findAll();
  res.json(categories);
}

// üîé GET /categories/:id - D√©tails d'une cat√©gorie
export async function getOneCategory(req, res) {
  const { id } = idSchema.parse(req.params);
  const category = await Category.findByPk(id);
  if (!category) throw new HttpError(404, "Cat√©gorie non trouv√©e.");
  res.json(category);
}

// ‚ûï POST /categories - Cr√©er une nouvelle cat√©gorie
export async function createCategory(req, res) {
  const data = categorySchema.parse(req.body);
  const newCategory = await Category.create(data);
  res.status(201).json(newCategory);
}

// ‚úèÔ∏è PATCH /categories/:id - Modifier une cat√©gorie
export async function updateCategory(req, res) {
  const { id } = idSchema.parse(req.params);
  const data = categorySchema.parse(req.body);
  const [updated] = await Category.update(data, { where: { categoryId: id } });
  if (!updated) throw new HttpError(404, "Cat√©gorie non trouv√©e.");
  const updatedCategory = await Category.findByPk(id);
  res.json(updatedCategory);
}

// üóë DELETE /categories/:id - Supprimer une cat√©gorie (si inutilis√©e)
export async function deleteCategory(req, res) {
  const { id } = idSchema.parse(req.params);
  const deleted = await Category.destroy({ where: { categoryId: id } });
  if (!deleted) throw new HttpError(404, "Impossible de supprimer la cat√©gorie : elle est peut-√™tre utilis√©e.");
  res.status(204).end();
}

// üå± GET /categories/:id/catalog-trees - Arbres d'une cat√©gorie
export async function getTreesByCategory(req, res) {
  const { id } = idSchema.parse(req.params);
  const category = await Category.findByPk(id);
  if (!category) throw new HttpError(404, "Cat√©gorie non trouv√©e.");

  const trees = await CatalogTree.findAll({
    where: { categoryId: id },
    include: ["region"] // Tu peux inclure ce que tu veux ici
  });

  res.json(trees);
}